version: '3.8'

services:
  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=test-id
      - MINIO_ROOT_PASSWORD=test-key
    command: server --console-address ":9001" /data
    volumes:
      - ./minio-data:/data
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
      - movie-network-service

  awslocal:
    image: amazon/aws-cli
    container_name: awslocal
    entrypoint: ['/bin/sh', '-c']
    command:
      - '-c'
      - |
        while !  curl -o /dev/null -s -w "%{http_code}\n" http://minio:9000/minio/health/live | grep -q '200'; do
        echo 'Waiting for MinIO to be ready...';
        sleep 5;
        done &&
        echo 'MinIO is healthy.' &&
        echo 'Listing S3 buckets...' &&
        if aws --endpoint-url=http://minio:9000 s3 ls | grep -q 'movie-bucket'; then
        echo 'Bucket "movie-bucket" already exists.';
        else
        echo 'Bucket "movie-bucket" does not exist. Creating it...';
        aws --endpoint-url=http://minio:9000 s3 mb s3://movie-bucket &&
        echo 'Bucket "movie-bucket" created successfully.';
        fi
    environment:
      - AWS_ACCESS_KEY_ID=test-id
      - AWS_SECRET_ACCESS_KEY=test-key
    depends_on:
      - minio
    networks:
      - movie-network-service

  movie-redis:
    image: redis
    container_name: movie-redis
    ports:
      - '6379:6379'

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: linhporo1
      POSTGRES_DB: admin_movie
    ports:
      - '5432:5432'
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - movie-network-service

  ffmpeg:
    build:
      context: .
      dockerfile: ./ffmpeg.Dockerfile
    container_name: ffmpeg-container
    volumes:
      - ./processed:/output:rw
    networks:
      - movie-network-service

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    ports:
      - '5050:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    depends_on:
      - postgres
    networks:
      - movie-network-service

  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    volumes:
      - ./data-mailpit:/data
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
      MP_UI_AUTH: admin:linhporo1

networks:
  movie-network-service:
    driver: bridge